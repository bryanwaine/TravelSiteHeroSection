{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/macnwanne/Projects/next/my-app2/app/components/PuzzleBattle4.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  useMemo,\n} from \"react\";\n\nimport { motion } from \"framer-motion\";\n\ninterface PuzzlePiece {\n  id: string;\n  type: \"fire\" | \"water\" | \"earth\" | \"air\" | \"light\" | \"dark\";\n  row: number;\n  col: number;\n  isMatched?: boolean;\n  comboGroup?: number;\n}\n\ninterface TimelineEvent {\n  id: string;\n  type: \"attack\" | \"defend\" | \"special\";\n  target: \"player\" | \"enemy\";\n  damage?: number;\n  timestamp: number;\n  position: number;\n}\n\ninterface Ability {\n  id: string;\n  name: string;\n  icon: string;\n  cooldown: number;\n  currentCooldown: number;\n  damage: number;\n  cost: number;\n}\n\ninterface GameState {\n  playerHP: number;\n  enemyHP: number;\n  playerMP: number;\n  turn: number;\n  combo: number;\n  score: number;\n}\n\ninterface ReplayFrame {\n  grid: PuzzlePiece[][];\n  gameState: GameState;\n}\n\nconst GRID_SIZE = 8;\nconst PIECE_TYPES: PuzzlePiece[\"type\"][] = [\n  \"fire\",\n  \"water\",\n  \"earth\",\n  \"air\",\n  \"light\",\n  \"dark\",\n];\nconst PIECE_COLORS = {\n  fire: \"#BF6A1F\",\n  water: \"#5B9BD5\",\n  earth: \"#8C441B\",\n  air: \"#F2EB80\",\n  light: \"#FFE4B5\",\n  dark: \"#401A04\",\n};\n\nconst PuzzleBattleGame: React.FC = () => {\n  const [grid, setGrid] = useState<PuzzlePiece[][]>([]);\n  const [selectedPiece, setSelectedPiece] = useState<PuzzlePiece | null>(null);\n  const [hoveredPiece, setHoveredPiece] = useState<PuzzlePiece | null>(null);\n  const [splitterPosition, setSplitterPosition] = useState(70);\n  const [isDraggingSplitter, setIsDraggingSplitter] = useState(false);\n  const [timelineEvents, setTimelineEvents] = useState<TimelineEvent[]>([]);\n  const [abilities, setAbilities] = useState<Ability[]>([]);\n  const [gameState, setGameState] = useState<GameState>({\n    playerHP: 100,\n    enemyHP: 100,\n    playerMP: 50,\n    turn: 1,\n    combo: 0,\n    score: 0,\n  });\n  const [predictedMoves, setPredictedMoves] = useState<PuzzlePiece[]>([]);\n  const [replayMode, setReplayMode] = useState(false);\n  const [replayHistory, setReplayHistory] = useState<any[]>([]);\n  const [currentReplayIndex, setCurrentReplayIndex] = useState(0);\n  const displayGameState = gameState ?? {\n    playerHP: 100,\n    enemyHP: 100,\n    playerMP: 50,\n    turn: 1,\n    combo: 0,\n    score: 0,\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const timelineRef = useRef<SVGSVGElement>(null);\n\n  // Initialize grid\n  useEffect(() => {\n    initializeGrid();\n    initializeAbilities();\n  }, []);\n\n  const initializeGrid = () => {\n    const newGrid: PuzzlePiece[][] = [];\n    for (let row = 0; row < GRID_SIZE; row++) {\n      newGrid[row] = [];\n      for (let col = 0; col < GRID_SIZE; col++) {\n        let pieceType;\n        do {\n          pieceType =\n            PIECE_TYPES[Math.floor(Math.random() * PIECE_TYPES.length)];\n        } while (\n          (col >= 2 &&\n            newGrid[row][col - 1].type === pieceType &&\n            newGrid[row][col - 2].type === pieceType) ||\n          (row >= 2 &&\n            newGrid[row - 1][col].type === pieceType &&\n            newGrid[row - 2][col].type === pieceType)\n        );\n        newGrid[row][col] = { id: `${row}-${col}`, type: pieceType, row, col };\n      }\n    }\n    setGrid(newGrid);\n  };\n\n  const initializeAbilities = () => {\n    setAbilities([\n      {\n        id: \"1\",\n        name: \"Fireball\",\n        icon: \"🔥\",\n        cooldown: 3,\n        currentCooldown: 0,\n        damage: 15,\n        cost: 10,\n      },\n      {\n        id: \"2\",\n        name: \"Heal\",\n        icon: \"💚\",\n        cooldown: 5,\n        currentCooldown: 0,\n        damage: -20,\n        cost: 15,\n      },\n      {\n        id: \"3\",\n        name: \"Thunder\",\n        icon: \"⚡\",\n        cooldown: 4,\n        currentCooldown: 0,\n        damage: 25,\n        cost: 20,\n      },\n      {\n        id: \"4\",\n        name: \"Shield\",\n        icon: \"🛡️\",\n        cooldown: 6,\n        currentCooldown: 0,\n        damage: 0,\n        cost: 5,\n      },\n    ]);\n  };\n\n  const handlePieceClick = (piece: PuzzlePiece) => {\n    if (!selectedPiece) {\n      setSelectedPiece(piece);\n    } else {\n      if (isAdjacent(selectedPiece, piece)) {\n        swapPieces(selectedPiece, piece);\n      }\n      setSelectedPiece(null);\n    }\n  };\n\n  const isAdjacent = (piece1: PuzzlePiece, piece2: PuzzlePiece): boolean => {\n    const rowDiff = Math.abs(piece1.row - piece2.row);\n    const colDiff = Math.abs(piece1.col - piece2.col);\n    return (rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1);\n  };\n\n  const swapPieces = (piece1: PuzzlePiece, piece2: PuzzlePiece) => {\n    const newGrid = [...grid];\n    const temp = newGrid[piece1.row][piece1.col];\n    newGrid[piece1.row][piece1.col] = newGrid[piece2.row][piece2.col];\n    newGrid[piece2.row][piece2.col] = temp;\n\n    // Update positions\n    newGrid[piece1.row][piece1.col].row = piece1.row;\n    newGrid[piece1.row][piece1.col].col = piece1.col;\n    newGrid[piece2.row][piece2.col].row = piece2.row;\n    newGrid[piece2.row][piece2.col].col = piece2.col;\n\n    setGrid(newGrid);\n\n    // Check for matches after swap\n    setTimeout(() => checkMatches(), 300);\n\n    // Add to replay history\n    if (!replayMode) {\n      setReplayHistory([\n        ...replayHistory,\n        { type: \"swap\", piece1, piece2, grid: newGrid },\n      ]);\n    }\n  };\n\n  const checkMatches = () => {\n    const newGrid = [...grid];\n    const matches: PuzzlePiece[] = [];\n    let comboGroup = 0;\n\n    // Check horizontal matches\n    for (let row = 0; row < GRID_SIZE; row++) {\n      for (let col = 0; col < GRID_SIZE - 2; col++) {\n        if (\n          newGrid[row][col].type === newGrid[row][col + 1].type &&\n          newGrid[row][col].type === newGrid[row][col + 2].type\n        ) {\n          comboGroup++;\n          for (\n            let i = col;\n            i < GRID_SIZE && newGrid[row][i].type === newGrid[row][col].type;\n            i++\n          ) {\n            if (!matches.find((m) => m.id === newGrid[row][i].id)) {\n              newGrid[row][i].isMatched = true;\n              newGrid[row][i].comboGroup = comboGroup;\n              matches.push(newGrid[row][i]);\n            }\n          }\n        }\n      }\n    }\n\n    // Check vertical matches\n    for (let col = 0; col < GRID_SIZE; col++) {\n      for (let row = 0; row < GRID_SIZE - 2; row++) {\n        if (\n          newGrid[row][col].type === newGrid[row + 1][col].type &&\n          newGrid[row][col].type === newGrid[row + 2][col].type\n        ) {\n          if (!newGrid[row][col].comboGroup) comboGroup++;\n          for (\n            let i = row;\n            i < GRID_SIZE && newGrid[i][col].type === newGrid[row][col].type;\n            i++\n          ) {\n            if (!matches.find((m) => m.id === newGrid[i][col].id)) {\n              newGrid[i][col].isMatched = true;\n              newGrid[i][col].comboGroup =\n                newGrid[i][col].comboGroup || comboGroup;\n              matches.push(newGrid[i][col]);\n            }\n          }\n        }\n      }\n    }\n\n    if (matches.length > 0) {\n      setGrid(newGrid);\n      processMatches(matches);\n    }\n  };\n\n  const processMatches = (matches: PuzzlePiece[]) => {\n    const damage = matches.length * 5;\n    const mpGain = matches.length * 2;\n\n    setGameState((prev) => ({\n      ...prev,\n      enemyHP: Math.max(0, prev.enemyHP - damage),\n      playerMP: Math.min(100, prev.playerMP + mpGain),\n      combo: prev.combo + 1,\n      score: prev.score + matches.length * 100 * (prev.combo + 1),\n    }));\n\n    // Add timeline event\n    const event: TimelineEvent = {\n      id: Date.now().toString(),\n      type: \"attack\",\n      target: \"enemy\",\n      damage,\n      timestamp: Date.now(),\n      position: 0,\n    };\n    setTimelineEvents((prev) => [...prev, event]);\n\n    // Clear matches after animation\n    setTimeout(() => {\n      dropPieces();\n    }, 500);\n    triggerEnemyTurn();\n  };\n\n  const dropPieces = () => {\n    const newGrid = [...grid];\n\n    // Drop existing pieces\n    for (let col = 0; col < GRID_SIZE; col++) {\n      let emptyRow = GRID_SIZE - 1;\n      for (let row = GRID_SIZE - 1; row >= 0; row--) {\n        if (!newGrid[row][col].isMatched) {\n          if (row !== emptyRow) {\n            newGrid[emptyRow][col] = newGrid[row][col];\n            newGrid[emptyRow][col].row = emptyRow;\n          }\n          emptyRow--;\n        }\n      }\n\n      // Fill empty spaces with new pieces\n      for (let row = emptyRow; row >= 0; row--) {\n        newGrid[row][col] = {\n          id: `${row}-${col}-${Date.now()}`,\n          type: PIECE_TYPES[Math.floor(Math.random() * PIECE_TYPES.length)],\n          row,\n          col,\n        };\n      }\n    }\n\n    setGrid(newGrid);\n\n    // Check for new matches\n    setTimeout(() => checkMatches(), 300);\n  };\n\n  const handlePieceHover = (piece: PuzzlePiece | null) => {\n    setHoveredPiece(piece);\n    if (piece && selectedPiece && isAdjacent(selectedPiece, piece)) {\n      // Show prediction\n      const predicted = simulateSwap(selectedPiece, piece);\n      setPredictedMoves(predicted);\n    } else {\n      setPredictedMoves([]);\n    }\n  };\n\n  const simulateSwap = (\n    piece1: PuzzlePiece,\n    piece2: PuzzlePiece\n  ): PuzzlePiece[] => {\n    const tempGrid = grid.map((row) => [...row]);\n    const temp = tempGrid[piece1.row][piece1.col];\n    tempGrid[piece1.row][piece1.col] = tempGrid[piece2.row][piece2.col];\n    tempGrid[piece2.row][piece2.col] = temp;\n\n    const matches: PuzzlePiece[] = [];\n\n    // Simulate match checking\n    for (let row = 0; row < GRID_SIZE; row++) {\n      for (let col = 0; col < GRID_SIZE - 2; col++) {\n        if (\n          tempGrid[row][col].type === tempGrid[row][col + 1].type &&\n          tempGrid[row][col].type === tempGrid[row][col + 2].type\n        ) {\n          for (\n            let i = col;\n            i < GRID_SIZE && tempGrid[row][i].type === tempGrid[row][col].type;\n            i++\n          ) {\n            matches.push(tempGrid[row][i]);\n          }\n        }\n      }\n    }\n\n    return matches;\n  };\n\n  const useAbility = (ability: Ability) => {\n    if (ability.currentCooldown > 0 || displayGameState.playerMP < ability.cost)\n      return;\n\n    setGameState((prev) => ({\n      ...prev,\n      playerMP: prev.playerMP - ability.cost,\n      enemyHP:\n        ability.damage > 0\n          ? Math.max(0, prev.enemyHP - ability.damage)\n          : prev.enemyHP,\n      playerHP:\n        ability.damage < 0\n          ? Math.min(100, prev.playerHP - ability.damage)\n          : prev.playerHP,\n    }));\n\n    setAbilities((prev) =>\n      prev.map((a) =>\n        a.id === ability.id ? { ...a, currentCooldown: a.cooldown } : a\n      )\n    );\n\n    const event: TimelineEvent = {\n      id: Date.now().toString(),\n      type: \"special\",\n      target: ability.damage > 0 ? \"enemy\" : \"player\",\n      damage: Math.abs(ability.damage),\n      timestamp: Date.now(),\n      position: 0,\n    };\n    setTimelineEvents((prev) => [...prev, event]);\n    triggerEnemyTurn();\n  };\n\n  const handleSplitterDrag = useCallback(\n    (e: MouseEvent) => {\n      if (!isDraggingSplitter || !containerRef.current) return;\n\n      const rect = containerRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const percentage = (x / rect.width) * 100;\n      setSplitterPosition(Math.min(Math.max(percentage, 30), 85));\n    },\n    [isDraggingSplitter]\n  );\n\n  useEffect(() => {\n    if (isDraggingSplitter) {\n      document.addEventListener(\"mousemove\", handleSplitterDrag);\n      document.addEventListener(\"mouseup\", () => setIsDraggingSplitter(false));\n      return () => {\n        document.removeEventListener(\"mousemove\", handleSplitterDrag);\n        document.removeEventListener(\"mouseup\", () =>\n          setIsDraggingSplitter(false)\n        );\n      };\n    }\n  }, [isDraggingSplitter, handleSplitterDrag]);\n\n  useEffect(() => {\n    if (!replayMode || replayHistory.length === 0) return;\n    const interval = setInterval(() => {\n      if (currentReplayIndex < replayHistory.length) {\n        const frame = replayHistory[currentReplayIndex];\n        setGrid(frame.grid);\n        setGameState(frame.gameState);\n        setCurrentReplayIndex((i) => i + 1);\n      } else {\n        setReplayMode(false);\n        setCurrentReplayIndex(0);\n        clearInterval(interval);\n      }\n    }, 800);\n    return () => clearInterval(interval);\n  }, [replayMode, currentReplayIndex, replayHistory]);\n\n  const saveReplayFrame = () => {\n    setReplayHistory((prev) => [\n      ...prev,\n      {\n        grid: JSON.parse(JSON.stringify(grid)),\n        gameState: { ...gameState },\n      },\n    ]);\n  };\n\n  const triggerEnemyTurn = () => {\n    if (displayGameState.enemyHP <= 0 || displayGameState.playerHP <= 0) return;\n    const damage = Math.floor(Math.random() * 10) + 5;\n    setGameState((prev) => {\n      const updated = {\n        ...prev,\n        playerHP: Math.max(0, prev.playerHP - damage),\n        turn: prev.turn + 1,\n      };\n      saveReplayFrame();\n      return updated;\n    });\n    const event: TimelineEvent = {\n      id: Date.now().toString(),\n      type: \"attack\",\n      target: \"player\",\n      damage,\n      timestamp: Date.now(),\n      position: 0,\n    };\n    setTimelineEvents((prev) => [...prev, event]);\n  };\n\n  const handleReplayToggle = () => {\n    if (!replayMode && replayHistory.length > 0) {\n      setCurrentReplayIndex(0);\n      setReplayMode(true);\n    } else {\n      setReplayMode(false);\n    }\n  };\n\n  //  Reset game state\n  const resetGame = () => {\n    initializeGrid();\n    setGameState({\n      playerHP: 100,\n      enemyHP: 100,\n      playerMP: 50,\n      turn: 1,\n      combo: 0,\n      score: 0,\n    });\n    setTimelineEvents([]);\n  };\n\n  // Update ability cooldowns\n  useEffect(() => {\n    const cooldownTimer = setInterval(() => {\n      setAbilities((prev) =>\n        prev.map((a) => ({\n          ...a,\n          currentCooldown: Math.max(0, a.currentCooldown - 1),\n        }))\n      );\n    }, 1000);\n\n    return () => clearInterval(cooldownTimer);\n  }, []);\n\n  const Timeline: React.FC<{ events: TimelineEvent[]; isPlayer: boolean }> = ({\n  events,\n  isPlayer,\n}) => {\n  const filteredEvents = events.slice(-10);\n  const color = isPlayer ? \"#4ADE80\" : \"#F87171\";\n\n  return (\n    <div className=\"relative h-24 w-full bg-gray-800 rounded-lg p-2 m-2 backdrop-blur-sm overflow-hidden\">\n      <div\n        className={`text-sm font-semibold ${\n          isPlayer ? \"text-green-400\" : \"text-red-400\"\n        } pl-2 mb-2`}\n      >\n        {isPlayer ? \"Player Timeline\" : \"Enemy Timeline\"}\n      </div>\n\n      <div className=\"relative w-full h-full overflow-hidden\">\n        {filteredEvents.map((event, index) => (\n          <motion.div\n            key={event.id}\n            className=\"absolute top-1/2 -translate-y-1/2 w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white\"\n            style={{\n              backgroundColor:\n                event.type === \"attack\"\n                  ? \"#BF6A1F\"\n                  : event.type === \"defend\"\n                  ? \"#8C441B\"\n                  : \"#F2EB80\",\n              left: \"-3rem\", // start off-screen left\n            }}\n            animate={{\n              left: \"100%\", // move to full right\n            }}\n            transition={{\n              duration: 10,\n              delay: index * 1,\n              ease: \"linear\",\n              repeat: Infinity,\n            }}\n          >\n            {event.damage || \"\"}\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n  const Bars3 = (props: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 20 20\"\n        width=\"2rem\"\n        height=\"2rem\"\n        {...props}\n      >\n        <path\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n          d=\"M2 4.75A.75.75 0 0 1 2.75 4h14.5a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 4.75ZM2 10a.75.75 0 0 1 .75-.75h14.5a.75.75 0 0 1 0 1.5H2.75A.75.75 0 0 1 2 10Zm0 5.25a.75.75 0 0 1 .75-.75h14.5a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1-.75-.75Z\"\n          clipRule=\"evenodd\"\n        ></path>\n      </svg>\n    );\n  };\n\n  const abilitiesWidthLg = 100 - splitterPosition;\n  const puzzleWidthLg = splitterPosition;\n\n  return (\n    <>\n      <style>\n        {`\n          .abilities {\n            padding: 1.5rem;\n            height: auto;\n            width: 100%;\n          }\n\n          .puzzle {\n            flex: 1;\n            padding: 1.5rem;\n            height: auto;\n            width: 100%;\n          }\n\n          @media (min-width: 1024px) {\n            .abilities {\n              height: 100%;\n              width: ${abilitiesWidthLg}%;\n            }\n\n            .puzzle {\n              order: 0;\n              height: 100%;\n              width: ${puzzleWidthLg}%;\n            }\n          }\n        `}\n      </style>\n      <div className=\"lg:min-h-screen w-screen bg-gray-700 flex items-center justify-center p-4 overflow-auto lg:overflow-hidden\">\n        <div\n          ref={containerRef}\n          className=\"lg:w-[1600px] lg:h-[calc(100vh-30px)] bg-gray-900 rounded-2xl shadow-2xl backdrop-blur-md flex flex-col lg:overflow-hidden\"\n        >\n          {/* Header */}\n          <div className=\"bg-gradient-to-r from-[#260801] to-[#401A04] p-4 flex justify-between items-center\">\n            {/* Left Side: Logo + Info */}\n            <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4\">\n              <h1 className=\"text-2xl md:text-3xl font-bold bg-gradient-to-r from-[#F2EB80] via-[#BF6A1F] to-red-500 bg-clip-text text-transparent\">\n                Puzzle Battle\n              </h1>\n              <div className=\"flex gap-2 md:gap-4\">\n                <span className=\"px-2 md:px-3 py-1 bg-[#BF6A1F] rounded-full text-white text-xs md:text-sm\">\n                  Turn {displayGameState?.turn ?? \"--\"}\n                </span>\n                <span className=\"px-2 md:px-3 py-1 bg-[#8C441B] rounded-full text-white text-xs md:text-sm\">\n                  Score: {displayGameState?.score ?? 0}\n                </span>\n                <span className=\"px-2 md:px-3 py-1 bg-[#F2EB80] rounded-full text-[#401A04] text-xs md:text-sm font-semibold\">\n                  Combo x{displayGameState.combo}\n                </span>\n              </div>\n            </div>\n\n            {/* Mobile Menu Toggle */}\n            <div className=\"sm:hidden\">\n              <button\n                onClick={() => setMenuOpen(!menuOpen)}\n                className=\"text-[#F2EB80] p-2\"\n              >\n                <Bars3 />\n              </button>\n              {menuOpen && (\n                <div className=\"absolute top-16 right-4 bg-[#401A04] rounded-lg shadow-lg flex flex-col gap-2 p-4 z-50\">\n                  <button\n                    onClick={() => {\n                      handleReplayToggle();\n                      setMenuOpen(false);\n                    }}\n                    className=\"px-4 py-2 bg-[#8C441B] hover:bg-[#BF6A1F] text-white rounded-lg transition\"\n                  >\n                    {replayMode ? \"Exit Replay\" : \"View Replay\"}\n                  </button>\n                  <button\n                    onClick={() => {\n                      resetGame();\n                      setMenuOpen(false);\n                    }}\n                    className=\"px-4 py-2 bg-[#8C441B] hover:bg-[#BF6A1F] text-white rounded-lg transition\"\n                  >\n                    New Game\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Desktop Buttons */}\n            <div className=\"hidden sm:flex gap-4\">\n              <button\n                onClick={handleReplayToggle}\n                className=\"px-4 py-2 bg-[#8C441B] hover:bg-[#BF6A1F] text-white rounded-lg transition\"\n              >\n                {replayMode ? \"Exit Replay\" : \"View Replay\"}\n              </button>\n              <button\n                onClick={resetGame}\n                className=\"px-4 py-2 bg-[#8C441B] hover:bg-[#BF6A1F] text-white rounded-lg transition\"\n              >\n                New Game\n              </button>\n            </div>\n          </div>\n\n          {/* HP/MP Bars */}\n          <div className=\"p-6 flex flex-col md:flex-row justify-center gap-8\">\n            <div className=\"flex-1 bg-gray-800 rounded-lg p-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-[#F2EB80] font-semibold\">Player</span>\n                <span className=\"text-green-400\">\n                  {displayGameState.playerHP}/100 HP\n                </span>\n              </div>\n              <div className=\"h-4 bg-black/40 rounded-full overflow-hidden mb-4\">\n                <div\n                  className=\"h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-300\"\n                  style={{ width: `${displayGameState.playerHP}%` }}\n                />\n              </div>\n              <div className=\"h-2 bt-2 bg-black/40 rounded-full overflow-hidden\">\n                <div\n                  className=\"h-full bg-gradient-to-r from-blue-500 to-blue-600 transition-all duration-300\"\n                  style={{ width: `${displayGameState.playerMP}%` }}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 bg-gray-800 rounded-lg p-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-[#F2EB80] font-semibold\">Enemy</span>\n                <span className=\"text-red-400\">\n                  {displayGameState.enemyHP}/100 HP\n                </span>\n              </div>\n              <div className=\"h-4 bg-black/40 rounded-full overflow-hidden\">\n                <div\n                  className=\"h-full bg-gradient-to-r from-red-500 to-red-600 transition-all duration-300\"\n                  style={{ width: `${displayGameState.enemyHP}%` }}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Timelines */}\n          <div className=\"relative px-4 flex gap-4 justify-center space-y-2\">\n            <Timeline\n              events={timelineEvents.filter((e) => e.target === \"player\")}\n              isPlayer={true}\n            />\n            <Timeline\n              events={timelineEvents.filter((e) => e.target === \"enemy\")}\n              isPlayer={false}\n            />\n          </div>\n\n          {/* Main Game Area */}\n          <div className=\"h-full flex-1 flex flex-col lg:flex-row relative \">\n            {/* Puzzle Grid */}\n            <div className=\"puzzle\">\n              <div className=\"h-full flex items-center justify-center p-6 bg-gray-800 rounded-xl shadow-inner\">\n                <div className=\"grid justify-items-center grid-cols-8 gap-2 lg:p-4 rounded-xl backdrop-blur-sm\">\n                  {grid.map((row, rowIndex) =>\n                    row.map((piece, colIndex) => (\n                      <div\n                        key={piece.id}\n                        className={`\n                      w-8 h-8 lg:w-14 lg:h-14 rounded-lg cursor-pointer transition-all duration-300 transform\n                      ${\n                        selectedPiece?.id === piece.id\n                          ? \"ring-4 ring-[#F2EB80] scale-110 z-10\"\n                          : \"\"\n                      }\n                      ${\n                        piece.isMatched\n                          ? \"scale-0 opacity-0\"\n                          : \"scale-100 opacity-100\"\n                      }\n                      ${\n                        predictedMoves.find((p) => p.id === piece.id)\n                          ? \"ring-2 ring-white animate-pulse\"\n                          : \"\"\n                      }\n                      hover:scale-105 active:scale-95\n                    `}\n                        style={{\n                          backgroundColor: PIECE_COLORS[piece.type],\n                          boxShadow: \"0 0 4px rgba(0,0,0,0.3)\",\n                        }}\n                        onClick={() => handlePieceClick(piece)}\n                        onMouseEnter={() => handlePieceHover(piece)}\n                        onMouseLeave={() => handlePieceHover(null)}\n                      >\n                        <div className=\"w-full h-full flex items-center justify-center text-2xl select-none\">\n                          {piece.type === \"fire\" && \"🔥\"}\n                          {piece.type === \"water\" && \"💧\"}\n                          {piece.type === \"earth\" && \"🌍\"}\n                          {piece.type === \"air\" && \"💨\"}\n                          {piece.type === \"light\" && \"✨\"}\n                          {piece.type === \"dark\" && \"🌙\"}\n                        </div>\n                        {piece.comboGroup && (\n                          <div className=\"absolute -top-2 -right-2 w-6 h-6 bg-[#F2EB80] rounded-full flex items-center justify-center text-xs font-bold text-[#401A04]\">\n                            {piece.comboGroup}\n                          </div>\n                        )}\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Splitter */}\n            <div\n              className=\"hidden lg:block w-1 h-full bg-gray-700 hover:bg-[#8C441B] cursor-ew-resize transition-colors relative\"\n              onMouseDown={() => setIsDraggingSplitter(true)}\n            >\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-16 flex items-center justify-center\">\n                <div className=\"w-1 h-full bg-[#F2EB80] opacity-50\" />\n              </div>\n            </div>\n\n            {/* Abilities Bar */}\n            <div className=\"abilities\">\n              <div className=\" p-6 h-full w-full bg-gray-800 lg:overflow-y-auto rounded-xl shadow-inner\">\n                <h3 className=\"text-xl font-bold text-[#F2EB80] mb-6\">\n                  Abilities\n                </h3>\n                <div className=\"space-y-6\">\n                  {abilities.map((ability) => (\n                    <div\n                      key={ability.id}\n                      className={`\n                    p-4 lg:p-6 bg-gradient-to-r from-[#401A04] to-[#8C441B] hover:from-[#8C441B] hover:to-[#BF6A1F] rounded-lg cursor-pointer\n                    transition-all duration-300 transform hover:scale-105\n                    ${\n                      ability.currentCooldown > 0 ||\n                      displayGameState.playerMP < ability.cost\n                        ? \"opacity-50 cursor-not-allowed\"\n                        : \"\"\n                    }\n                  `}\n                      onClick={() => useAbility(ability)}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <span className=\"text-3xl\">{ability.icon}</span>\n                          <div>\n                            <h4 className=\"text-[#F2EB80] text-lg font-semibold mb-2\">\n                              {ability.name}\n                            </h4>\n                            <p className=\"text-xs font-semibold text-white\">\n                              {ability.damage > 0\n                                ? `${ability.damage} DMG`\n                                : `${-ability.damage} HEAL`}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-[#F2EB80] text-sm font-semibold\">\n                            {ability.cost} MP\n                          </div>\n                          {ability.currentCooldown > 0 && (\n                            <div className=\"text-white/70 text-xs\">\n                              CD: {ability.currentCooldown}s\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Game Over Overlay */}\n          {(displayGameState.playerHP <= 0 ||\n            displayGameState.enemyHP <= 0) && (\n            <div className=\"absolute inset-0 bg-black/80 flex items-center justify-center backdrop-blur-sm\">\n              <div className=\"bg-gradient-to-br from-[#401A04] to-[#8C441B] p-8 rounded-2xl text-center\">\n                <h2 className=\"text-4xl font-bold text-[#F2EB80] mb-4\">\n                  {displayGameState.playerHP <= 0 ? \"Game Over\" : \"Victory!\"}\n                </h2>\n                <p className=\"text-2xl text-white mb-6\">\n                  Final Score: {displayGameState.score}\n                </p>\n                <button\n                  onClick={resetGame}\n                  className=\"px-8 py-3 bg-[#F2EB80] hover:bg-[#BF6A1F] text-[#401A04] hover:text-white rounded-lg font-semibold transition-all duration-300 transform hover:scale-105\"\n                >\n                  Play Again\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PuzzleBattleGame;\n"],"names":[],"mappings":"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","debugId":null}}]
}